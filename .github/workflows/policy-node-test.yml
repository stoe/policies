name: reusable test

on:
  workflow_call:

jobs:
  repo-visibility:
    runs-on: ubuntu-latest

    outputs:
      isPublic: ${{ steps.visibility.outputs.isPublic }}

    permissions:
      contents: read

    steps:
      - name: Get repository visibility
        id: visibility
        run: |
          echo "isPublic=$(gh repo view --json visibility | jq -r '.visibility == "PUBLIC"')" >> $GITHUB_OUTPUT

  test-matrix:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    env:
      CI: true
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: true
      matrix:
        node-version:
          - 18
        canFail: [true]
        include:
          - node-version: 16
            canFail: false

    continue-on-error: ${{ matrix.canFail }}

    concurrency:
      group: test-${{ github.ref }}-${{ matrix.node-version }}-${{ matrix.canFail }}
      cancel-in-progress: true

    needs: [repo-visibility]

    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Check repository dependency graph
        uses: actions/dependency-review-action@f46c48ed6d4f1227fb2d9ea62bf6bcbed315589e
        if: ${{ github.event_name == 'pull_request' && needs.repo-visibility.outputs.isPublic == 'true' }}

      - name: Setup Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@stoe'
          cache: 'npm'

      - name: Build and test
        run: |
          npm pkg delete scripts.prepare
          npm install --ignore-scripts --pure-lockfile

      - run: npm run build --if-present

      - run: npm run test --if-present

  test:
    runs-on: ubuntu-latest

    needs: test-matrix

    steps:
      - name: Success
        run: echo "success"
