name: reusable test

on:
  workflow_call:

jobs:
  test-matrix:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    env:
      CI: true
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: true
      matrix:
        node-version:
          - 20
          - 22
        experimental: [false]
        include:
          - node-version: 24
            experimental: true
          - node-version: lts/*
            experimental: true

    continue-on-error: ${{ matrix.experimental }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.node-version }}-${{ matrix.experimental }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check repository visibility
        if: ${{ github.event_name == 'pull_request' }}
        id: visibility
        run: |
          echo "isPrivate=$(gh repo view --json isPrivate --jq '.isPrivate')" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check repository dependency graph
        uses: actions/dependency-review-action@56339e523c0409420f6c2c9a2f4292bbb3c07dd3 # v4.8.0
        if: ${{ github.event_name == 'pull_request' && steps.visibility.outputs.isPrivate == 'false' }}

      - name: Setup Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@stoe'
          cache: 'npm'

      - name: Get NPM cache directory
        id: npm-cache-dir
        run: |
          echo "NPM_CACHE_DIR=$(npm config get cache)" >> "$GITHUB_OUTPUT"

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.npm-cache-dir.outputs.NPM_CACHE_DIR }}
          key: npm-${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.cache-name }}-
            npm-${{ runner.os }}-
            npm-

      - name: NPM config
        run: |
          npm pkg delete scripts.prepare
          npm install --ignore-scripts --pure-lockfile

      - name: List the state of node modules
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: npm list --omit=dev

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm run test --if-present

  test:
    runs-on: ubuntu-latest

    needs: test-matrix

    steps:
      - name: Success
        run: echo "success"
